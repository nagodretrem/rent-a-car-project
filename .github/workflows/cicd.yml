name: CICD

on:
    push:
        branches: [ deploy-to-ec2 ]
    pull_request:
        branches: [ deploy-to-ec2 ]

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout source
          uses: actions/checkout@v3
        - name: Setup Java
          uses: actions/setup-java@v3
          with:
            distribution: 'corretto'
            java-version: '20'
        - name: Build with Maven
          run: mvn clean install -DskipTests
        - name: Login to Docker Hub
          run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
        - name: Build docker image
          run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/rent-a-car .
        - name: Publish image to docker hub
          run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/rent-a-car:latest



    deploy:
      needs: build
      runs-on: [aws-ec2]
      steps:
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Pull image from docker hub
          run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/rent-a-car:latest
        - name: Define environment variables from secrets
          env:
            DATABASE_URL: ${{ secrets.DB_URL }}
            DATABASE_USERNAME: ${{ secrets.DB_USERNAME }}
            DATABASE_PASSWORD: ${{ secrets.DB_PASSWORD }}
            JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
            JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
        - name: Create application.properties file
          run: |
            echo "spring.datasource.url=$DATABASE_URL" > ./app/application.properties
            echo "spring.datasource.username=$DATABASE_USERNAME" >> ./app/application.properties
            echo "spring.datasource.password=$DATABASE_PASSWORD" >> ./app/application.properties
            echo "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect" >> ./app/application.properties
            echo "spring.jpa.hibernate.ddl-auto=update" >> ./app/application.properties
            echo "spring.jpa.properties.javax.persistence.validation.mode=auto" >> ./app/application.properties
            echo "spring.jpa.hibernate.show-sql=true" >> ./app/application.properties
            echo "application.security.jwt.secret-key=$JWT_SECRET_KEY" >> ./app/application.properties
            echo "application.security.jwt.expiration=$JWT_EXPIRATION" >> ./app/application.properties
        - name: Delete old container
          run: docker rm -f rent-a-car
        - name: Run container
          run: docker run -d -p 8080:8080 --name rent-a-car ${{ secrets.DOCKERHUB_USERNAME }}/rent-a-car:latest
